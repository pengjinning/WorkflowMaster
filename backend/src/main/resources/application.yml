server:
  port: 8000

spring:
  profiles:
    active: dev
  
  # Enable bean definition overriding as a fallback
  main:
    allow-bean-definition-overriding: true
  
  # Simplified global CORS configuration
  mvc:
    cors:
      mapping: "/**"
      allowed-origins: "*"
      allowed-origin-patterns: "*"
      allowed-methods: "*"
      allowed-headers: "*"
      exposed-headers: "Authorization,Content-Disposition"
      allow-credentials: true
      max-age: 3600
  
  # http://localhost:8000/h2-console
  # JDBC URL: jdbc:h2:mem:testdb
  # 用户名: sa
  # 密码: （留空即可）
  datasource:
    url: ${DATABASE_URL:jdbc:h2:mem:testdb}
    username: ${DATABASE_USERNAME:sa}
    password: ${DATABASE_PASSWORD:}
    driver-class-name: ${DATABASE_DRIVER:org.h2.Driver}
  
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:create-drop}
    show-sql: ${JPA_SHOW_SQL:true}
    properties:
      hibernate:
        format_sql: true
  
  h2:
    console:
      enabled: ${H2_CONSOLE_ENABLED:true}
      path: /h2-console
  
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

logging:
  level:
    com.workflow: ${LOG_LEVEL:DEBUG}
    org.springframework.security: ${SECURITY_LOG_LEVEL:INFO}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:DEBUG}
    org.springframework.web.cors: DEBUG # Add CORS debug logging

# Swagger/OpenAPI configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method

# Custom application properties
workflow:
  jwt:
    secret: ${JWT_SECRET:mySecretKey}
    expiration: ${JWT_EXPIRATION:86400000}
  
  webhook:
    base-url: ${WEBHOOK_BASE_URL:http://localhost:8000}
  
  notification:
    enabled: ${NOTIFICATION_ENABLED:true}
